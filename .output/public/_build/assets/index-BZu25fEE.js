import{I as y,x as l,f as b,b as h,J as S,K as v}from"./web-BP_Sm2kp.js";import{u as x,r as m,l as w}from"./maplibre-gl-DPmtbcJ2.js";const g=S(),k=()=>v(g),j=e=>{const[a]=x();e.id??=y();const c=(t,n)=>{a.map.debug&&console.debug("%c[MapGL]","color: #ec4899",t,n||"")},o=t=>{const n=t?.split(":").reduce((d,L)=>d&&d[L],m),r=n?{...e.source,url:"",tiles:[n.replace("{apikey}",e.source.apikey||void 0).replace("{r}",window.devicePixelRatio>1?"@2x":"")],attribution:m[t.split(":")[0]]._copy}:e.source;return r.tiles&&(r.tiles=["a","b","c"].map(d=>r.tiles[0].replace("{s}",d))),r};a.map.addSource(e.id,o(e.source.url)),a.map.sourceIdList.push(e.id),c("Add Source:",e.id);const i=a.map.getSource(e.id);switch(e.source.type){case"geojson":l(()=>{const t=e.source.data;a.map.isSourceLoaded(e.id)&&(i.setData(t||{}),c("Update GeoJSON Data:",e.id))});break;case"image":l(()=>{const t=e.source.url,n=e.source.coordinates;a.map.isSourceLoaded(e.id)&&(i.updateImage(t,n),c("Update Image Data:",e.id))});break;case"vector":l(()=>{const t=e.source.url,n=e.source.tiles;a.map.isSourceLoaded(e.id)&&(t?i.setUrl(t):i.setTiles(n),c("Update Vector Data:",e.id))});break;case"raster":l(()=>{const t=o(e.source.url);a.map.isSourceLoaded(e.id)&&(t.url?i.setUrl(t.url):i.setTiles(t.tiles),c("Update Raster Data:",e.id))});break}return b(()=>{a.map?.getStyle().layers.forEach(t=>t.source===e.id&&a.map.removeLayer(t.id)),a.map?.getSource(e.id)&&a.map?.removeSource(e.id),c("Remove Source:",e.id)}),h(g.Provider,{get value(){return e.id},get children(){return e.children}})},z=["id","type","filter","source","source-layer","minzoom","metadata","maxzoom","paint","layout"],I=["visibility","line-join","line-cap","line-miter-limit","line-round-limit","line-sort-key","circle-sort-key","symbol-avoid-edges","symbol-placement","symbol-sort-key","symbol-spacing","symbol-z-order","icon-allow-overlap","icon-anchor","icon-ignore-placement","icon-image","icon-keep-upright","icon-offset","icon-optional","icon-padding","icon-pitch-alignment","icon-rotate","icon-rotation-alignment","icon-size","icon-text-fit","icon-text-fit-padding","text-allow-overlap","text-anchor","text-field","text-font","text-ignore-placement","text-justify","text-keep-upright","text-letter-spacing","text-line-height","text-max-angle","text-max-width","text-offset","text-optional","text-padding","text-pitch-alignment","text-radial-offset","text-rotate","text-rotation-alignment","text-size","text-transform","text-variable-anchor","text-writing-mode"],f=(e={},a={})=>[...new Set([...Object.keys(e),...Object.keys(a)])].reduce((o,i)=>{const t=e[i];return t!==a[i]&&o.push([i,t]),o},[]),u=(e,a)=>(e.startsWith(a)||e.startsWith("icon")||e.startsWith("text")?"":a+"-")+e.replace(/[A-Z]/g,c=>"-"+c.toLowerCase()),s=e=>{if(!e)return;let a={},c={},o={};return Object.entries(e).forEach(([i,t])=>{if(z.includes(i))o[i]=t;else{const n=u(i,e.type);I.includes(n)?a[n]=t:c[n]=t}}),e.paint&&Object.entries(e.paint).forEach(([i,t])=>c[u(i,e.type)]=t),e.layout&&Object.entries(e.layout).forEach(([i,t])=>a[u(i,e.type)]=t),{...o,paint:c,layout:a}},C=e=>{const[a]=x(),c=e.style?.source||k();e.id=e.id||e.customLayer?.id||y();const o=(i,t)=>{a.map.debug&&console.debug("%c[MapGL]","color: #10b981",i,t||"")};return a.map.addLayer(e.customLayer||{...s(e.style),id:e.id,source:c,metadata:{smg:{beforeType:e.beforeType,beforeId:e.beforeId}}},e.beforeType?a.map.getStyle().layers.find(i=>i.type===e.beforeType)?.id:e.beforeId),a.map.layerIdList.push(e.id),e.customLayer&&a.map.fire("load"),o("Add Layer:",e.id),w.forEach(i=>{if(e[i]){const t=i.slice(2).toLowerCase();a.map.on(t,e.id,n=>{n.clickOnLayer=!0,e[i](n),o(`Layer '${t}' event on '${e.id}':`,n)})}}),l(i=>{const t=s(e.style);if(t!==i)return t.layout!==i?.layout&&f(t.layout,i?.layout).forEach(([n,r])=>a.map.setLayoutProperty(e.id,n,r,{validate:!1})),t.paint!==i?.paint&&f(t.paint,i?.paint).forEach(([n,r])=>a.map.setPaintProperty(e.id,n,r,{validate:!1})),(t.minzoom!==i?.minzoom||t.maxzoom!==i?.maxzoom)&&a.map.setLayerZoomRange(e.id,t.minzoom,t.maxzoom),t.filter!==i?.filter&&a.map.setFilter(e.id,t.filter,{validate:!1}),o("Update Layer Style:",e.id),t},s(e.style)),l(i=>{if(e.visible!==i)return a.map.setLayoutProperty(e.id,"visibility",e.visible?"visible":"none",{validate:!1}),o(`Update Visibility (${e.id}):`,e.visible.toString()),e.visible},e.visible),l(async()=>{e.filter&&(!a.map.isStyleLoaded()&&await a.map.once("styledata"),a.map.setFilter(e.id,e.filter),o(`Update Filter (${e.id}):`,e.filter))}),l(async()=>{!e.featureState||e.featureState.id===null||(!a.map.isStyleLoaded()&&await a.map.once("styledata"),a.map.removeFeatureState({source:c,sourceLayer:e.style["source-layer"]}),a.map.setFeatureState({source:c,sourceLayer:e.style["source-layer"],id:e.featureState.id},e.featureState.state))}),b(()=>a.map?.getLayer(e.id)&&a.map?.removeLayer(e.id)),e.children};export{C as L,j as S};
