import{ssr as i,ssrHydrationKey as c,escape as t,ssrAttribute as p,createComponent as r,ssrStyleProperty as k}from"solid-js/web";import{u as h}from"./assets/index-BBOR6-eJ.js";import{createSignal as $,createEffect as P,Show as w}from"solid-js";import{k as A,l as I,c as S,r as n,m as g,u as x}from"./assets/backend-CxM3g3pI.js";import{c as R,e as F,a as U,g as O}from"./assets/user-3VDwjqVg.js";import E from"dayjs";import j from"dayjs/plugin/utc.js";/* empty css                     */import{C as N}from"./assets/close-CKxkeldA.js";/* empty css                       */import{c as T}from"./assets/createAsync-Dqt8Sub7.js";import"solid-js/store";import"./assets/routing-BPjDSAJ2.js";import"solid-js/web/storage";import"h3";import"unctx";import"node:async_hooks";import"crypto";import"util";import"nanoid";import"@zxcvbn-ts/core";import"@zxcvbn-ts/language-common";import"@zxcvbn-ts/language-en";var M=["<div",' class="','"><span class="type-body-3">',"</span></div>"];function q(e){const[s]=h();return i(M,c(),`toast ${s.toastOpen?"":"toast--translate"}`,t(e.message))}E.extend(j);const H=I(async e=>{const d=(await S())?.usersId;if(!d)throw n("/");const a=String(e.get("current-password")),l=String(e.get("new-password")),f=String(e.get("confirm-new-password"));if(l!=f)return new Error("New password fields must match");const o=await g.getUserById(d);if(o.status===404)throw n("/");const u=await o.json();if(!u[0].isActive)throw n("/verify-email");const m=await R(a,u[0].passwordHash),C=await F(l);if(!m)return new Error("Invalid credentials");const y=U(l);if(y.score<4)return new Error(`New password too weak: ${y.feedback.warning}`);try{const K=await(await g.updateUserPassword({usersId:u[0].usersId,passwordHash:C})).json();console.info(`User ID ${K.usersid} changed password.`)}catch(b){return console.error(`password change failed: ${JSON.stringify(b)}`),new Error("Failed to password change")}throw n("/account")},"src_db_account_ts--changePassword_action","/Users/toko/dev/temp/AirSense/src/db/account.ts?tsr-directive-use-server="),v=A(H,"change-password-action"),B=I(async e=>{const s=String(e.get("token")),a=(await S())?.usersId;if(!a)throw n("/login");const l=await g.getUserById(a);if(!a)throw n("/login");if((await l.json()).length===0)throw n("/login");const o=new URL("https://api.openaq.org");o.pathname="/auth/regenerate-token";const u={usersId:a,token:s};try{await(await fetch(o.href,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(u)})).json()}catch(m){return console.error(`Regenerate key failed: ${m}`),new Error("Failed to update key")}throw n("/account")},"src_db_account_ts--regenerateKey_action","/Users/toko/dev/temp/AirSense/src/db/account.ts?tsr-directive-use-server="),_=A(B);var J=["<p",' style="','" role="alert" id="error-message">',"</p>"],L=["<form",' class="password-form" name="password-form" id="password-form"',' method="post"><div class="form-element"><label for="current-password">Current password</label><input type="password" name="current-password" id="current-password" class="text-input"></div><div class="form-element"><label for="new-password">New password</label><input type="password" name="new-password" id="new-password" class="text-input"></div><div class="form-element"><label for="confirm-new-password">Confirm new password</label><input type="password" name="confirm-new-password" id="confirm-new-password" class="text-input"></div><div class="form-element"><!--$-->','<!--/--><div><button type="submit" class="btn btn-primary"',">Change password</button></div></div></form>"];function W(){const e=x(v),[s,d]=$();return P(()=>{e.pending||s()?.reset()}),i(L,c(),p("action",t(v,!0),!1),t(r(w,{get when(){return e.result},get children(){return i(J,c(),k("color:","red"),t(e.result?.message))}})),p("disabled",e.pending,!0))}var Q=["<p",' style="','" role="alert" id="error-message">',"</p>"],X=["<dialog",' class="modal"><form',' name="regenerate-key-form" id="regenerate-key-form" method="post"><header class="modal__header"><h2>Regenerate API Key</h2><button id="close" class="close-btn" aria-label="close" formnovalidate>','</button></header><div class="modal__body">Warning: The current key will stop working when a new key is regenerated</div><footer class="modal__footer"><button class="btn btn-secondary" id="cancel" aria-label="close" formnovalidate autofocus>Cancel</button><!--$-->','<!--/--><input type="hidden" name="token"','><button class="btn btn-primary" type="submit" autofocus>Regenerate</button></footer></form></dialog>'];function z(e){const s={width:24,height:24,fill:"#FFFFFF"},[d,{toggleRegenerateKeyModalOpen:a}]=h(),[l,f]=$();P(()=>{d.apiKeyRegenerateModalOpen&&l()?.showModal()});const o=x(_);return i(X,c(),p("action",t(_,!0),!1),t(r(N,s)),t(r(w,{get when(){return o.result},get children(){return i(Q,c(),k("color:","red"),t(o.result?.message))}})),p("value",t(e.token,!0),!1))}var G=["<span",' class="inactive-account-warning">ðŸš« API usage for this account has been temporarily suspended due to violation of the platform <a href="https://docs.openaq.org/about/terms">Terms of Use</a>. Please contact <a href="mailto:dev@openaq.org">dev@openaq.org</a>.</span>'],V=["<button",' class="btn btn-primary">Regenerate</button>'],Y=["<main",' class="account-page"><!--$-->','<!--/--><h1 class="type-display-1 text-sky-120">OpenAQ Account</h1><section class="account-page__section"><h2 class="type-heading-2 text-sky-120">Basics</h2><div class="form-element"><label for="name">Name</label><input type="text" name="name" id="name" class="text-input"','></div><div class="form-element"><label for="name">Email</label><input type="email" name="email" id="email" class="text-input"','></div></section><section class="account-page__section"><h2 class="type-heading-2 text-sky-120">Change password</h2><!--$-->','<!--/--></section><section class="account-page__section"><h2 class="type-heading-2 text-sky-120">API Key</h2><!--$-->','<!--/--><input class="text-input"','><div class="api-key-buttons"><button class="btn btn-primary">Copy</button><!--$-->',"<!--/--></div></section><!--$-->","<!--/--></main>"];function Z(){return i(G,c())}function ke(){const e=T(()=>O(),{deferStream:!0}),[s,{openToast:d,toggleRegenerateKeyModalOpen:a}]=h();return i(Y,c(),t(r(z,{get token(){return e()?.token}})),p("value",t(e()?.fullname,!0),!1),p("value",t(e()?.email,!0),!1),t(r(W,{})),t(r(w,{get when(){return!e()?.isActive},get children(){return r(Z,{})}})),p("value",t(e()?.token,!0),!1),t(r(w,{get when(){return e()?.isActive},get children(){return i(V,c())}})),t(r(q,{message:"API Key copied to clipboard"})))}export{ke as default};
