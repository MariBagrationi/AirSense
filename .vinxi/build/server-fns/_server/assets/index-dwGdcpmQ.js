import{k as o,n as d}from"./backend-DPj8aydh.js";import i from"dayjs";import m from"dayjs/plugin/timezone.js";import _ from"dayjs/plugin/utc.js";import{b as x}from"./lists-D96-zvNg.js";import"solid-js";import"solid-js/web";import"./routing-BfDgGOS4.js";import"solid-js/web/storage";import"h3";import"unctx";import"node:async_hooks";i.extend(_);i.extend(m);const A=o(async function(s){const r=new URL("https://api.openaq.org");return r.pathname=`/v3/locations/${s}`,await(await fetch(r.href,{headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}})).json()},"src_client_index_tsx--fetchLocation_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),S=o(async function(e,s,r,n){const t=new URL("https://api.openaq.org");t.pathname=`/v3/sensors/${e}/measurements`,t.search=`?datetime_from=${s.replace(" ","%2b")}&datetime_to=${r.replace(" ","%2b")}&limit=${n}`,console.info(`fetching ${t.href}`);const a=await fetch(t.href,{headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}});if(a.status!==200)throw console.error(`${t.href} failed with HTTP ${a.status}`),new Error("failed to fetch");return(await a.json()).results},"src_client_index_tsx--fetchSensorMeasurementsDownload_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),b=S,w=o(async function(e,s,r,n){const t=new URL("https://api.openaq.org");t.pathname=`/v3/sensors/${e}/hours`,t.search=`?datetime_from=${s.replace(" ","%2b")}&datetime_to=${r.replace(" ","%2b")}&limit=${n}`,console.info(`fetching ${t.href}`);const a=await fetch(t.href,{headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}});if(a.status!==200)throw console.error(`${t.href} failed with HTTP ${a.status}`),new Error("failed to fetch");return(await a.json()).results},"src_client_index_tsx--fetchSensorMeasurements_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),l=w,M=o(async function(e,s,r,n){const t=new URL("https://api.openaq.org");return t.pathname=`/v3/sensors/${e}/hours/${s}`,t.search=`?datetime_from=${r.replace(" ","%2b")}&datetime_to=${n.replace(" ","%2b")}`,console.info(`fetching ${t.href}`),(await(await fetch(t.href,{headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}})).json()).results},"src_client_index_tsx--fetchSensorTrends_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),v=M,g=o(async function(){const e=new URL("https://api.openaq.org");return e.pathname="/v3/providers",e.search="limit=1000",await(await fetch(e.href,{headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}})).json()},"src_client_index_tsx--fetchProviders_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),y=g,P=o(async(e,s,r,n=1e3)=>{const t=await l(e,s,r,n);return d(t,{headers:{"cache-control":"max-age=60"}})},"src_client_index_tsx--getSensorMeasurements_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),q=o(async(e,s,r,n=1e3)=>{const t=await b(e,s,r,n);return d(t,{headers:{"cache-control":"max-age=60"}})},"src_client_index_tsx--getSensorMeasurementsDownload_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),K=o(async(e,s)=>{const r=i(new Date,s).toISOString(),n=i(new Date().getTime()-864e5,s).toISOString(),a=(await l(e.id,n,r,24)).map(c=>({date:c.period.datetimeTo.local,value:c.value}));return d({parameter:`${e.parameter.displayName} ${e.parameter.units}`,series:a},{headers:{"cache-control":"max-age=3600"}})},"src_client_index_tsx--getSensorRecentMeasurements_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),X=o(async e=>{const s=await u(e),r=s.results[0].sensors,n=[],t=i(new Date,s.timezone).toISOString(),a=i(new Date().getTime()-864e5,s.timezone).toISOString();for(const c of r){const f=(await l(c.id,a,t,24)).map(p=>({date:p.period.datetimeTo.local,value:p.value}));n.push({parameter:c.parameter.displayName,series:f})}return n},"src_client_index_tsx--getLocationRecentMeasurements_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),O=o(async(e,s,r,n)=>{const t=await v(e,s,r,n);return d(t,{headers:{"cache-control":"max-age=86400"}})},"src_client_index_tsx--getSensorTrends_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),N=o(async e=>{const s=await u(e);return d(s,{headers:{"cache-control":"max-age=60"}})},"src_client_index_tsx--getLocation_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),z=o(async()=>{const e=await y();return d(e,{headers:{"cache-control":"max-age=86400"}})},"src_client_index_tsx--getProviders_GET","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),H=o(async e=>{const s=await x(e);if(!s||!s.licenses)return console.error(`No licenses found for location ID: ${e}`),[];const r=s.licenses.map(f=>f.id),n=new URL("https://api.openaq.org");return n.pathname="/v3/licenses",(await(await fetch(n.href,{headers:{"Content-Type":"application/json","X-API-KEY":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"}})).json()).results.filter(f=>r.includes(f.id))},"src_client_index_tsx--getLocationLicenses_query","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/client/index.tsx?tsr-directive-use-server="),u=A;export{A as fetchLocation_1,g as fetchProviders_1,S as fetchSensorMeasurementsDownload_1,w as fetchSensorMeasurements_1,M as fetchSensorTrends_1,H as getLocationLicenses_query,X as getLocationRecentMeasurements_GET,N as getLocation_GET,z as getProviders_GET,q as getSensorMeasurementsDownload_GET,P as getSensorMeasurements_GET,K as getSensorRecentMeasurements_GET,O as getSensorTrends_GET};
