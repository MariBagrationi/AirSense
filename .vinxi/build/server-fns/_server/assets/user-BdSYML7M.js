import{k as u,b as g,r as i,l as d,o as _,q as v,t as S,v as b}from"./backend-hM8sUyp6.js";import{j as I,e as y,k as U,m as k}from"./user-C3LDJoBY.js";import l from"dayjs";import P from"dayjs/plugin/utc.js";import{getRequestEvent as E}from"solid-js/web";import"solid-js";import"./routing-BfDgGOS4.js";import"solid-js/web/storage";import"h3";import"node:async_hooks";import"crypto";import"util";import"nanoid";import"@zxcvbn-ts/core";import"@zxcvbn-ts/language-common";import"@zxcvbn-ts/language-en";l.extend(P);const W=u(async()=>{if((await g())?.usersId)throw i("/")},"src_auth_user_ts--redirectIfLoggedIn_query","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),C=u(async()=>{const s=(await g())?.usersId;let t;if(typeof s=="number")t=await d.getUserById(s);else throw i("/");if(t.status===404)throw i("/");const r=await t.json();if(r.length>0)return{email:r[0].emailAddress,fullname:r[0].fullname,token:r[0].token,isActive:r[0].isActive};throw i("/")},"src_auth_user_ts--getLoggedInUser_query","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),Y=u(async e=>{const n=((E()?.request.headers.get("x-forwarded-for")||"")?.split(", "))[0]||"0.0.0.0",o=String(e.get("fullname")),a=String(e.get("email-address")),c=String(e.get("password")),f=String(e.get("password-confirm")),p=String(e.get("forwardParams"))||"";if(typeof a!="string"||typeof o!="string"||typeof c!="string"||typeof f!="string"||typeof p!="string")return new Error("Form not submitted correctly.");if(a==="")return new Error("Valid email address required");if(!I(a))return console.info(`invalid email domain attempt: ${a}`),new Error("Valid email address required - disposable email domains not allowed.");if(o==="")return new Error("Name is required");if(c===""||f==="")return new Error("Password fields required");if(c!==f)return new Error("Passwords must match");const m=await y(c);let w=await d.getUserByEmailAddress(a);if(w.status==200)throw(await w.json()).active?i("/login"):i(`/verify-email?email=${a}`);await(await d.createUser({fullName:o,emailAddress:a,passwordHash:m,ipAddress:n})).json();try{if(w=await d.getUserByEmailAddress(a),w.status===200){const h=await w.json();await j(h[0].usersId)}if(w.status===404)throw new Error("failed to create new user")}catch(h){return h}throw i(`/verify-email?email=${a}`)},"src_auth_user_ts--register_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),Z=u(async e=>{const s=String(e.get("email-address")),t=String(e.get("password")),r=String(e.get("remember-me")??!1),n=String(e.get("redirect"));try{const o=await d.getUserByEmailAddress(s);if(o.status!==200)throw new Error("Invalid credentials");const a=await o.json();if(a.length==0)throw new Error("Invalid credentials");const c=a[0];if(!c.isVerified)throw i("/verify-email");if(!await U(t,c.passwordHash))throw new Error("Invalid credentials");const m=r=="on"?3600*24*30:3600*24;await _(c.usersId,m)}catch(o){return o}throw i(n??"/",{revalidate:[g.key,A.key]})},"src_auth_user_ts--login_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),ee=u(async()=>(await S(),b([g.key,A.key])),"src_auth_user_ts--logout_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),M=u(async e=>{const s=new URL("https://api.openaq.org");s.pathname="/auth/send-verification";const t={usersId:e};await(await fetch(s.href,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(t)})).json()},"src_auth_user_ts--sendVerificationEmail_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),q=u(async function(e){const s=new URL("https://api.openaq.org");s.pathname="/auth/register-token";const t={usersId:e};await fetch(s.href,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(t)})},"src_auth_user_ts--registerToken_1","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),R=q,se=u(async e=>{const s=await d.getUserByVerificationCode(e);if(s.status==404)throw i("/");const t=await s.json();if(t[0].active)throw i("/login");if(l()<l(t.expiresOn))throw i(`/expired?code=${e}`);await d.verifyUser(t[0].usersId);try{await R(t[0].usersId)}catch(r){return console.error("failed to register token",r),r}throw i("/email-verified")},"src_auth_user_ts--verifyEmail_query","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),re=u(async e=>{const s=String(e.get("verification-code")),t=await d.getUserByVerificationCode(s);if(t.status===404)throw i("/login");const r=await t.json();if(r.active)throw i("/login");try{const n=new URL("https://api.openaq.org");n.pathname="/auth/resend-verification-code";const o={usersId:r[0].usersId,verificationCode:s},a=await fetch(n.href,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(o)})}catch(n){return n}throw i(`/verify-email?email=${r[0].emailAddress}`)},"src_auth_user_ts--resendVerificationEmail_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),te=u(async e=>{const s=String(e.get("email-address"));if((await d.getUserByEmailAddress(s)).status===404)throw i("/check-email");try{const r=new URL("https://api.openaq.org");r.pathname="/auth/send-password-email";const n={emailAddress:s},o=await fetch(r.href,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(n)})}catch(r){return r}throw i("/password-email")},"src_auth_user_ts--forgotPasswordLink_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),ae=u(async e=>{const s=String(e.get("verification-code")),t=String(e.get("new-password")),r=String(e.get("confirm-new-password")),n=await d.getUserByVerificationCode(s);if(n.status!==200)throw i("/login");const o=await n.json();if(l()>l(o[0].expiresOn))return new Error("Verification code expired, request a new password change email.");try{k(t,r);const a=await y(t),{usersId:c}=o[0],f=await d.updateUserPassword({usersId:c,passwordHash:a});if(f.status!==200)return console.error(`Failed to update user password: ${f.url} HTTP ${f.status}`),new Error("Failed to update password");const p=await f.json();console.info(`User ID ${p.usersid} changed password.`)}catch(a){return a}try{const a=new URL("https://api.openaq.org");a.pathname="/auth/send-password-changed-email";const c={emailAddress:o[0].emailAddress},f=await fetch(a.href,{method:"POST",headers:{"Content-Type":"application/json","X-API-Key":"be79fbc7b35789af970752f816b8bf9b79a5198ef9157a4c596e27a5bd70fa40"},body:JSON.stringify(c)})}catch(a){return a}throw i("/login")},"src_auth_user_ts--forgotPassword_action","C:/Users/MARIAM/Desktop/AirSense/AirSense/src/auth/user.ts?tsr-directive-use-server="),A=v(C,"get-logged-in-user"),j=M;export{te as forgotPasswordLink_action,ae as forgotPassword_action,C as getLoggedInUser_query,Z as login_action,ee as logout_action,W as redirectIfLoggedIn_query,q as registerToken_1,Y as register_action,re as resendVerificationEmail_action,M as sendVerificationEmail_1,se as verifyEmail_query};
